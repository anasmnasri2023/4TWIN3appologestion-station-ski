pipeline {
    agent any

    environment {

     SONARQUBE_SERVER = 'http://192.168.33.10:9000'
     SONARQUBE_TOKEN = credentials('scanner')  // Ensure 'scanner' matches the Jenkins credential ID
    registryCredentials = "nexus"
    registry = "192.168.33.10:8083"
    }

    stages {
        stage('Checkout') {
            steps {
                // Clone your GitHub repository
                checkout scm
            }
        }

        stage('Build') {
            steps {
                script {
                    // Install dependencies and build the package (skip tests for now)
                    sh 'mvn clean package -DskipTests'
                }
            }
        }

        // Building Docker images
        stage('Building images ') {
        steps{
        script {
        sh('docker-compose build')
        }
        }
        }

        // Uploading Docker images into Nexus Registry
      stage('Deploy to Nexus') {
              steps {
                  script {
                      docker.withRegistry("http://${registry}", registryCredentials) {
                          sh('docker push 192.168.33.10:8083/springbootapp:1.0')
                      }
                  }
              }
          }



        stage('Package') {
            steps {
                script {
                    // Create final JAR file
                    sh 'mvn package -DskipTests'
                    // Archive the built JAR
                    archiveArtifacts artifacts: 'target/*.jar', fingerprint: true
                }
            }
        }
    }



    post {
        always {
            echo 'Pipeline completed'
            // Clean up workspace if needed
            cleanWs()
        }
        success {
            echo 'Build succeeded!'
        }
        failure {
            echo 'Build failed!'
        }
    }
}
