pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                script {
                    sh 'mvn clean package -DskipTests'
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    def scannerHome = tool 'scanner'
                    withSonarQubeEnv('scanner') {  // Match the name you configured in Jenkins
                        sh """
                            ${scannerHome}/bin/sonar-scanner \\
                            -Dsonar.host.url=http://192.168.33.10:9000 \\
                            -Dsonar.login=${env.SONAR_AUTH_TOKEN} \\
                            -Dsonar.projectKey=nodeapp \\
                            -Dsonar.projectName=gestion-station-ski \\
                            -Dsonar.sources=src/main/java \\
                            -Dsonar.java.binaries=target/classes \\
                            -Dsonar.sourceEncoding=UTF-8
                        """
                    }
                }
            }
        }

        stage('Package') {
            steps {
                script {
                    sh 'mvn package -DskipTests'
                    archiveArtifacts artifacts: 'target/*.jar', fingerprint: true
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline completed'
            cleanWs()
        }
        success {
            echo 'Build succeeded!'
        }
        failure {
            echo 'Build failed!'
        }
    }
}
